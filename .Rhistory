stu_data_hm <- stu_data_h %>% dplyr::select(ResponseID,StudyArea,starts_with("I"))
stu_data_hm$ID <- NULL
d1<- stu_data_hm[c(3:28)]
d1<-na.omit(d1)
c1<-cor(d1)
g1<-corrplot(c1)
}
else if(input$selectP1 == 'Performance Ratings')
{
stu_data_hm <- stu_data_h %>% dplyr::select(ResponseID,StudyArea,starts_with("P"))
stu_data_hm$Position <- NULL
stu_data_hm$P27 <- NULL
stu_data_hm$ID <- NULL
d1<- stu_data_hm[c(3:28)]
d1<-na.omit(d1)
c1<-cor(d1)
g1<-corrplot(c1)
}
if(input$selectP2 == 'Accountancy')
{
stu_data_hm <- filter(stu_data_hm, StudyArea == '1')
}
else if(input$selectP2 == 'Business')
{
stu_data_hm <- filter(stu_data_hm, StudyArea == '2')
}
else if(input$selectP2 == 'Economics')
{
stu_data_hm <- filter(stu_data_hm, StudyArea == '3')
}
else if(input$selectP2 == 'Information Systems')
{
stu_data_hm <- filter(stu_data_hm, StudyArea == '4')
}
else if(input$selectP2 == 'Law')
{
stu_data_hm <- filter(stu_data_hm, StudyArea == '5')
}
else if(input$selectP2 == 'Social Sciences')
{
stu_data_hm <- filter(stu_data_hm, StudyArea == '6')
}
else if(input$selectP2 == 'Others')
{
stu_data_hm <- filter(stu_data_hm, StudyArea == '7')
}
d<-na.omit(stu_data_hm)
#Data Cleaning after selection
res.pca <- PCA(d[, 3:28], graph = FALSE)
eig.val <- get_eigenvalue(res.pca)
eig.val
if(input$selectP3 == 'Scree Plot')
{
base_settings =
theme_bw() +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5))
scree <-  fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
scree
}
else if(input$selectP3 == 'Corr Plot')
{
base_settings =
theme_bw() +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5))
var <- get_pca_var(res.pca)
corr <- g1
}
#Code for plotting the pca cluster map
else if(input$selectP3 == 'Loading Plot')
{
if(input$selectP4 == 'Dim 1 vs Dim 2')
{
base_settings =
theme_bw() +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_var(res.pca, col.var = "cos2", axes = 1:2,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
}
else if(input$selectP4 == 'Dim 2 vs Dim 3')
{
base_settings =
theme_bw() +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_var(res.pca, col.var = "cos2", axes = 2:3,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
}
else if(input$selectP4 == 'Dim 3 vs Dim 4')
{
base_settings =
theme_bw() +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_var(res.pca, col.var = "cos2", axes = 3:4,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
}
else if(input$selectP4 == 'Dim 4 vs Dim 5')
{
base_settings =
theme_bw() +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_var(res.pca, col.var = "cos2", axes = 4:5,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
}
}
})
# Page 6
output$plot_anova = renderPlotly({
d1 <- lib_data
d1$cat <- ifelse(d1$Position==1 | d1$Position== 2 |d1$Position== 3 | d1$Position== 4, "Undergrads",
ifelse(d1$Position==5 , "Exchange",
ifelse(d1$Position== 6 | d1$Position== 7, "PostGrads",
ifelse(d1$Position== 8 | d1$Position== 9| d1$Position== 10| d1$Position== 11| d1$Position== 12, "Faculty",
ifelse(d1$Position== 13 |d1$Position== 14,"Others",
NA  )))) )
if(input$selectA1 == 'Importance Ratings')
{
d2<-  d1 %>% dplyr::select(ResponseID,cat,starts_with("I"),-ID)
d2<-d2[-c(5),] # Dropping the NA value
#Communications
dc<-d2 %>% dplyr::select(ResponseID,cat,I01,I02,I03)
dc$Mean_Comm<-rowMeans(dc[,3:5],na.rm =TRUE)
dcbox<-dc[,c(1,2,6)]
dcbox <- na.omit(dcbox)
res.aov <- dcbox %>% anova_test(Mean_Comm ~ cat)
res.aov
DT::datatable(
head(res.aov), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '30px', targets = c(1, ncol(res.aov)))),
scrollX = TRUE,
scrollCollapse = TRUE)
)
pwc <- dcbox %>% tukey_hsd(Mean_Comm ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = FALSE,
scrollCollapse = FALSE)
)
#Serice Delivery
ds<-d2 %>% dplyr::select(ResponseID,cat,I04,I05,I06,I07,I08,I09,I10,I11,I12,I13)
ds$Mean_Serv<-rowMeans(ds[,3:12],na.rm =TRUE)
dsbox<-ds[,c(1,2,13)]
dsbox <- na.omit(dsbox)
#Facilities and Equipment
dfac<-d2 %>% dplyr::select(ResponseID,cat,I14,I15,I16,I17,I18,I19,I20)
dfac$Mean_Fac<-rowMeans(dfac[,3:9],na.rm =TRUE)
dfacbox<-dfac[,c(1,2,10)]
dfacbox <- na.omit(dfacbox)
#Information Resources
dinf<-d2 %>% dplyr::select(ResponseID,cat,I21,I22,I23,I24,I25,I26)
dinf$Mean_Inf<-rowMeans(dinf[,3:8],na.rm =TRUE)
dinfbox<-dinf[,c(1,2,9)]
dinfbox <- na.omit(dinfbox)
}
else if(input$selectA1 == 'Performance Ratings')
{
d2<-  d1 %>% dplyr::select(ResponseID,cat,starts_with("P"),-ID)
d2<-d2[-c(5),] # Dropping the NA value
#Communications
dc<-d2 %>% dplyr::select(ResponseID,cat,P01,P02,P03)
dc$Mean_Comm<-rowMeans(dc[,3:5],na.rm =TRUE)
dcbox<-dc[,c(1,2,6)]
dcbox <- na.omit(dcbox)
#Service Delivery
ds<-d2 %>% dplyr::select(ResponseID,cat,P04,P05,P06,P07,P08,P09,P10,P11,P12,P13)
ds$Mean_Serv<-rowMeans(ds[,3:12],na.rm =TRUE)
dsbox<-ds[,c(1,2,13)]
dsbox <- na.omit(dsbox)
#Facilities and Equipment
dfac<-d2 %>% dplyr::select(ResponseID,cat,P14,P15,P16,P17,P18,P19,P20)
dfac$Mean_Fac<-rowMeans(dfac[,3:9],na.rm =TRUE)
dfacbox<-dfac[,c(1,2,10)]
dfacbox <- na.omit(dfacbox)
#Information Resources
dinf<-d2 %>% dplyr::select(ResponseID,cat,P21,P22,P23,P24,P25,P26)
dinf$Mean_Inf<-rowMeans(dinf[,3:8],na.rm =TRUE)
dinfbox<-dinf[,c(1,2,9)]
dinfbox <- na.omit(dinfbox)
}
if(input$selectA2 == 'Communication')
{
if(input$selectA3 == 'QQ-Plot')
{
n1<- ggqqplot(dcbox, "Mean_Comm", facet.by = "cat",conf.int.level = 0.95, title = "Normality test for Communication")
n1
}
else if(input$selectA3 == 'Anova Graph')
{
fig1 <- dcbox %>%
plot_ly(
x = ~cat,
y = ~Mean_Comm,
split = ~cat,
type = 'violin',
box = list(
visible = T
),
opacity = 0.6,
meanline = list(
visible = T
)
)
fig1 <- fig1 %>%
layout(title = "Difference in Mean Across Respondents: Communication",
xaxis = list(
title = "Respondent Role"
),
yaxis = list(
title = "Mean Ratings",
zeroline = T
)
)
fig1
}
}
else if(input$selectA2 == 'Service Delivery')
{
if(input$selectA3 == 'QQ-Plot')
{
n2<- ggqqplot(dsbox, "Mean_Serv", facet.by = "cat",conf.int.level = 0.95, title = "Normality test for Service Delivery")
n2
}
else if(input$selectA3 == 'Anova Graph')
{
fig2 <- dsbox %>%
plot_ly(
x = ~cat,
y = ~Mean_Serv,
split = ~cat,
type = 'violin',
box = list(
visible = T
),
opacity = 0.6,
meanline = list(
visible = T
)
)
fig2 <- fig2 %>%
layout(title = "Difference in Mean Across Respondents: Service Delivery",
xaxis = list(
title = "Respondent Role"
),
yaxis = list(
title = "Mean Ratings",
zeroline = T
)
)
fig2
}
}
else if(input$selectA2 == 'Facilities and Equipment')
{
if(input$selectA3 == 'QQ-Plot')
{
n3<- ggqqplot(dfacbox, "Mean_Fac", facet.by = "cat",conf.int.level = 0.95, title = "Normality test for Facilities and Equipment")
n3
}
else if(input$selectA3 == 'Anova Graph')
{
fig3 <- dfacbox %>%
plot_ly(
x = ~cat,
y = ~Mean_Fac,
split = ~cat,
type = 'violin',
box = list(
visible = T
),
opacity = 0.6,
meanline = list(
visible = T
)
)
fig3 <- fig3 %>%
layout(title = "Difference in Mean Across Respondents: Facilities & Equipment",
xaxis = list(
title = "Respondent Role"
),
yaxis = list(
title = "Mean Ratings",
zeroline = T
)
)
fig3
}
}
else if(input$selectA2 == 'Information Resources')
{
if(input$selectA3 == 'QQ-Plot')
{
n4<- ggqqplot(dinfbox, "Mean_Inf", facet.by = "cat",conf.int.level = 0.95, title = "Normality test for Information Resources")
n4
}
else if(input$selectA3 == 'Anova Graph')
{
fig4 <- dinfbox %>%
plot_ly(
x = ~cat,
y = ~Mean_Inf,
split = ~cat,
type = 'violin',
box = list(
visible = T
),
opacity = 0.6,
meanline = list(
visible = T
)
)
fig4 <- fig4 %>%
layout(title = "Difference in Mean Across Respondents: Information Resources",
xaxis = list(
title = "Respondent Role"
),
yaxis = list(
title = "Mean Ratings",
zeroline = T
)
)
fig4
}
}
})
output$plot_tukey = DT::renderDataTable({
d1 <- lib_data
d1$cat <- ifelse(d1$Position==1 | d1$Position== 2 |d1$Position== 3 | d1$Position== 4, "Undergrads",
ifelse(d1$Position==5 , "Exchange",
ifelse(d1$Position== 6 | d1$Position== 7, "PostGrads",
ifelse(d1$Position== 8 | d1$Position== 9| d1$Position== 10| d1$Position== 11| d1$Position== 12, "Faculty",
ifelse(d1$Position== 13 |d1$Position== 14,"Others",
NA  )))) )
if(input$selectA1 == 'Importance Ratings')
{
d2<-  d1 %>% dplyr::select(ResponseID,cat,starts_with("I"),-ID)
d2<-d2[-c(5),] # Dropping the NA value
if(input$selectA2 == 'Communication')
{
#Communications
dc<-d2 %>% dplyr::select(ResponseID,cat,I01,I02,I03)
dc$Mean_Comm<-rowMeans(dc[,3:5],na.rm =TRUE)
dcbox<-dc[,c(1,2,6)]
dcbox <- na.omit(dcbox)
res.aov <- dcbox %>% anova_test(Mean_Comm ~ cat)
pwc <- dcbox %>% tukey_hsd(Mean_Comm ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
else if(input$selectA2 == 'Service Delivery')
{
#Service Delivery
ds<-d2 %>% dplyr::select(ResponseID,cat,I04,I05,I06,I07,I08,I09,I10,I11,I12,I13)
ds$Mean_Serv<-rowMeans(ds[,3:12],na.rm =TRUE)
dsbox<-ds[,c(1,2,13)]
dsbox <- na.omit(dsbox)
res.aov <- dsbox %>% anova_test(Mean_Serv ~ cat)
pwc <- dsbox %>% tukey_hsd(Mean_Serv ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
else if(input$selectA2 == 'Facilities and Equipment')
{
#Facilities and Equipment
dfac<-d2 %>% dplyr::select(ResponseID,cat,I14,I15,I16,I17,I18,I19,I20)
dfac$Mean_Fac<-rowMeans(dfac[,3:9],na.rm =TRUE)
dfacbox<-dfac[,c(1,2,10)]
dfacbox <- na.omit(dfacbox)
res.aov <- dfacbox %>% anova_test(Mean_Fac ~ cat)
pwc <- dfacbox %>% tukey_hsd(Mean_Fac ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
else if(input$selectA2 == 'Information Resources')
{
#Information Resources
dinf<-d2 %>% dplyr::select(ResponseID,cat,I21,I22,I23,I24,I25,I26)
dinf$Mean_Inf<-rowMeans(dinf[,3:8],na.rm =TRUE)
dinfbox<-dinf[,c(1,2,9)]
dinfbox <- na.omit(dinfbox)
res.aov <- dinfbox %>% anova_test(Mean_Inf ~ cat)
pwc <- dinfbox %>% tukey_hsd(Mean_Inf ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
}
else if(input$selectA1 == 'Performance Ratings')
{
d2<-  d1 %>% dplyr::select(ResponseID,cat,starts_with("P"),-ID)
d2<-d2[-c(5),] # Dropping the NA value
if(input$selectA2 == 'Communication')
{
#Communications
dc<-d2 %>% dplyr::select(ResponseID,cat,P01,P02,P03)
dc$Mean_Comm<-rowMeans(dc[,3:5],na.rm =TRUE)
dcbox<-dc[,c(1,2,6)]
dcbox <- na.omit(dcbox)
res.aov <- dcbox %>% anova_test(Mean_Comm ~ cat)
pwc <- dcbox %>% tukey_hsd(Mean_Comm ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
else if(input$selectA2 == 'Service Delivery')
{
#Serice Delivery
ds<-d2 %>% dplyr::select(ResponseID,cat,P04,P05,P06,P07,P08,P09,P10,P11,P12,P13)
ds$Mean_Serv<-rowMeans(ds[,3:12],na.rm =TRUE)
dsbox<-ds[,c(1,2,13)]
dsbox <- na.omit(dsbox)
res.aov <- dsbox %>% anova_test(Mean_Serv ~ cat)
pwc <- dsbox %>% tukey_hsd(Mean_Serv ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
else if(input$selectA2 == 'Facilities and Equipment')
{
#Facilities and Equipment
dfac<-d2 %>% dplyr::select(ResponseID,cat,P14,P15,P16,P17,P18,P19,P20)
dfac$Mean_Fac<-rowMeans(dfac[,3:9],na.rm =TRUE)
dfacbox<-dfac[,c(1,2,10)]
dfacbox <- na.omit(dfacbox)
res.aov <- dfacbox %>% anova_test(Mean_Fac ~ cat)
pwc <- dfacbox %>% tukey_hsd(Mean_Fac ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
else if(input$selectA2 == 'Information Resources')
{
#Information Resources
dinf<-d2 %>% dplyr::select(ResponseID,cat,P21,P22,P23,P24,P25,P26)
dinf$Mean_Inf<-rowMeans(dinf[,3:8],na.rm =TRUE)
dinfbox<-dinf[,c(1,2,9)]
dinfbox <- na.omit(dinfbox)
res.aov <- dinfbox %>% anova_test(Mean_Inf ~ cat)
pwc <- dinfbox %>% tukey_hsd(Mean_Inf ~ cat)
pwc
DT::datatable(
head(pwc), extensions = 'FixedColumns',
options =
list(dom = 't',
columnDefs = list(list(width = '300px', targets = c(1, ncol(pwc)))),
scrollX = TRUE,
scrollCollapse = FALSE)
)
}
}
})
}
shinyApp (ui=ui, server=server)
runApp('LSR_server.R')
